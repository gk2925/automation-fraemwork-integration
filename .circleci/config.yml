# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.4.1
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
 
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    working_directory: ~/automation-framework-integration # directory where steps will run
    docker:
      - image: cimg/python:3.11-browsers
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - browser-tools/install-browser-tools:
            chrome-version: 109.0.5414.74
      # Checkout the code as the first step.
      - checkout
      - run:
            name: install maven 
            command: |
              sudo apt update
              sudo apt install maven

      - run:
            name: Check Chrome version 
            command: |
              google-chrome --version
              python --version
              node --version
              java --version
              google-chrome --version
              mvn --version
              echo "${USER}"
              echo "${PASS}"
      - run:
            name: Check Current directory
            command: pwd
            
      - run:
          name: Check current directory
          command: ls
          
      - run:
          name: make linux driver executable
          command: chmod 777 drivers/linux/chromedriver 
      - run:
          name: install trcli
          command: pip install trcli


      - run:
          name: Build
          command: mvn clean compile
      # Then run your tests!
      - run:
          name: Test
          command: mvn clean compile test

      - run:
          name: parse the tests to testrait 
          command: | 
             trcli -y \
             -h https://testrail101.testrail.io/ \
             --project "TestRail CLI code-first" \
             -u $USER \
             -p $PASS \ 
              parse_junit \
             --title "Automated Tests from CircleCI flow" \
             -f "./target/TEST-junit-jupiter.xml"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
